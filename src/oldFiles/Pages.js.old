import React, {useMemo, useState} from "react";
import {getNovels} from "../novels/novelController";
import {encodeRuby} from "../modules/encoder";
import {getPagesJs} from "../modules/getPagesJs";

export const Pages = (props) => {
    const novelId = props.novelId;
    const epId = props.epId;
    const [text, setText] = useState([""]);
    const [windowWidth, setWindowWidth] = useState(window.innerWidth);
    const fColor = props.fColor;
    const bgColor = props.bgColor;
    const xy = props.xy;
    const pages = useMemo(() => {
        console.log("lines:");
        console.log(text);
        return getPagesJs(text);
    }, [text]);
    const pageDivs = useMemo(() => {
        let i = -1;
        return pages.map((page) => {
            const linesP = page.lines.map((line) => {
                return <p>{ line }</p>;
            });
            i++;
            return (
                <div key={"outer-" + i} style={outerStyle}>
                    <div key={"inner-" + i} id={"p-" + i} style={innerStyle}>
                        { linesP }
                    </div>
                </div>
            );
        });
    }, [pages]);
    const innerMargin = useMemo(() => {
        return xy === "horizontal-tb" ? "0 auto 0 0" : "0 0 0 auto";
    }, [xy]);
    const outerStyle = {
        backgroundColor: bgColor,
        margin: "20px " + ((windowWidth - 700) / 2) + "px",
        padding: "50px",
        width: "700px",
        height: "70vh",
    }
    const innerStyle = {
        color: fColor,
        textAlign: "justify",
        writingMode: xy,
        margin: innerMargin,
    };
    const createTestPages = () => {
        let pages = [];
        for(let i = 0; i < 5; i++){
            pages.push(
                <div key={"outer-" + i} style={outerStyle}>
                    <div key={"inner-" + i} id={"p-" + i} style={innerStyle}>
                        <p>{i + 1}ページめ！</p>
                        <p>これはテストやで！</p>
                        <p>これはテストやで！</p>
                        <p>これはテストやで！</p>
                        <p>これはテストやで！</p>
                    </div>
                </div>
            );
        }
        return pages;
    }
    window.addEventListener('resize', () => {
        console.log('resized window');
        setWindowWidth(window.innerWidth);
    });
    useMemo(() => {
        // const str = getNovels(novelId, epId);
        // console.log("str: ");
        // console.log(str);
        // const lines = encodeRuby(str).split("\n");
        // setText(lines);
        setText(getNovels(novelId, epId));
    }, [novelId, epId]);

    return (
        <>
            {/*{ createTestPages() }*/}
            { pageDivs }
        </>
    );
}